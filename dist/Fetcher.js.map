{"version":3,"file":"Fetcher.js","sourceRoot":"","sources":["../src/Fetcher.ts"],"names":[],"mappings":";;;AAAA,yDAAqD;AAErD,MAAM,QAAQ,GAAG,IAAI,0BAAW,EAAE,CAAC;AAEnC,wDAAwD;AACxD,eAAe;AACf,4CAA4C;AAC5C,4CAA4C;AAC5C,sDAAsD;AACtD,sEAAsE;AACtE,kEAAkE;AAClE,4DAA4D;AAC5D,uDAAuD;AACvD,sCAAsC;AACtC,8CAA8C;AAG9C,IAAI;AAEJ,MAAa,OAAO;IAKhB,YAAY,GAAW,EAAE,QAAgB,EAAE,KAAa;QACpD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,MAAc;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;QACtG,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,KAAK,EAC5C,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAClB,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAnBD,0BAmBC","sourcesContent":["import { QueryEngine } from \"@comunica/query-sparql\";\n\nconst myEngine = new QueryEngine();\n\n// function getQuery(offset: number, pageSize: number) {\n//     return `\n// PREFIX prov: <http://www.w3.org/ns/prov#>\n// PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n// PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n// PREFIX brt: <http://brt.basisregistraties.overheid.nl/def/top10nl#>\n// PREFIX bag: <http://bag.basisregistraties.overheid.nl/def/bag#>\n// PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n// PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n// PREFIX ex: <http://example.org/ns#>\n// PREFIX dcterms: <http://purl.org/dc/terms/>\n\n\n// }\n\nexport class Fetcher {\n    url: string;\n    pageSize: number;\n    query: string;\n\n    constructor(url: string, pageSize: number, query: string) {\n        this.url = url\n        this.pageSize = pageSize;\n        this.query = query;\n    }\n\n    public async fetch(offset: number) {\n        const query = this.query.replace(\"${offset}\", offset + \"\").replace(\"${pageSize}\", this.pageSize + \"\");\n        const response = await myEngine.queryQuads(query,\n            { sources: [this.url] });\n        const quads = await response.toArray();\n        console.log(quads)\n        return quads;\n    }\n}\n"]}